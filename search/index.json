[{"content":"2023 年 11 月 27 日 - 12 月 3 日\n生活 11.28号喜茶出了与江西博物馆无语佛联名的佛喜茶拿铁（是我朋友用过的同款表情包诶哈哈哈），就想着去尝尝，感觉味道一般，不会买第二次了，这次买完后我的喜茶会员也升级成黑卡贵宾了（😮不知不觉间居然已经点了这么多奶茶了）。\n我自己还是更喜欢喜茶的果茶，当然芋泥系列和芝芝绿妍、芝芝抹茶也很不错！and现在喜茶的标准甜好甜，已经很久没有点过标准甜度了。\n本周终于收到了单依纯演唱会的消息（12 月 23 日杭州，是单姐的生日！），开心开心，等了这么久终于是要来了，一定要抢到票啊!!!\n周六，团建，略（中奖了开心）。\n观影 电影 想着总不能出门就为买一杯奶茶吧（来都来了😂），就去看了这部曹保平导演的《涉过愤怒的海》，之前有刷到视频博主推荐这部电影，是‘‘灼心三部曲’’最后一部？，不喜欢。《狗十三》也是这位导演的作品，印象里应该是没看过的，好像挺感人的，以后哪天可能会去看一看。\n电视 周日花一整天一口气看完了韩剧《闪烁的西瓜》，真的很好看呐，喜欢，Viva La Vida 人生万岁\nps：清雅也太美了吧\n本周还看了TVB的《新闻女王》，职场剧但是宫斗🙄，总体感觉还是不错的。\n剧里有一段台词我很喜欢：“但是新闻不同，有时候会觉得无聊而且还看不懂，但是新闻有它的价值，不一定是观众最想看到的，但绝对是大家必须要知道的。”\n听歌 听了孙盛希的新专辑《Boomerang》，是好听的，但还是更喜欢前两张的《出没地带》和《希游记》。收藏了《Adddicted》，被I'm just ad-d-d-d-dicted to you这句歌词洗脑了\n","date":"2023-12-04T13:56:34+08:00","permalink":"https://weightless-sea.github.io/p/%E7%AC%AC49%E5%91%A8/","title":"第49周"},{"content":"在经历了各种磕磕碰碰后，这个博客总算是搭建完成了\n接下来就写写此站从新建文件夹到诞生的主要过程吧\n搭建准备 安装 git ssh\n搭建方案 使用scoop安装Hugo-extended Hugo创建博客源文件 为博客安装stack主题 在 GitHub 上创建两个新仓库，一个存放博客源文件，另一个命名为 username.github.io，用于存放 Hugo 生成的静态站点。 博客源文件中配置GitHub Actions以自动构建 Hugo 网站并将静态文件推送到你的 username.github.io 仓库，github pages自动部署博客。 使用scoop安装Hugo-extended scoop的安装 Powershell或命令行中输入：\n1 2 Set-ExecutionPolicy RemoteSigned -Scope CurrentUser # Optional: Needed to run a remote script the first time irm get.scoop.sh | iex 完成scoop的安装\n安装Hugo的extend版本 命令行输入：\n1 scoop install hugo-extended 完成Hugo-extended的安装\n创建博客站点 命令行界面输入:\n1 hugo new site myblog 这样就创建一个新的 Hugo 博客，相关的文件都在myblog文件夹中 。\n输入hugo server实现hugo博客的预览，运行成功后，可以在 http://localhost:1313/ 中预览网站（目前博客还什么都没有，打开就是一片空白）\n命令行中输入hugo生成网页\n为博客添加stack主题 使用 git submodule add将主题作为一个子模块添加到仓库中 进入 Hugo 博客根目录 初始化 Git 仓库： git init 添加 Stack 主题作为子模块 1 git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack 初始化和更新子模块 当你首次克隆一个包含子模块的仓库时，需要初始化和更新子模块。这可以通过以下命令完成：\n1 2 git submodule init git submodule update 这两个命令会初始化本地配置文件，并从那个 URL 拉取所有数据并检出你在主项目中所指定的特定提交。\n修改主题配置 删除博客根目录下的hugo.toml初始配置文件 将\\themes\\hugo-theme-stack\\exampleSite中的config.yaml配置文件和content文件夹复制到博客根目录 根据需要修改config.yaml配置文件 提交更改到Git 仓库： 添加更改到暂存区： git add . 提交更改： git commit -m \u0026quot;Add hugo-theme-stack as a submodule\u0026quot; 将博客部署到github上 推送到远程仓库 在 GitHub 上创建用于一个你的 Hugo 博客源文件的仓库，将本地更改推送到远程仓库：\n1 2 git remote add origin \u0026lt;your-remote-repository-url\u0026gt; git push -u origin master 在 GitHub 上创建另一个新仓库，命名为 username.github.io，用于存放 Hugo 生成的静态站点。（将 username 替换为你的 GitHub 用户名）。稍后我们将在Hugo 源代码仓库中配置GitHub Actions ，以自动构建 Hugo 网站并将静态文件推送到这里。\n配置 GitHub Actions 在 Hugo 源代码仓库中配置 GitHub Actions，以自动构建 Hugo 网站并将静态文件推送到你的 username.github.io 仓库。\n创建GitHub Actions工作流文件 在源代码仓库中创建 .github/workflows 目录。 在该目录中创建一个 YAML 文件，比如命名为 deploy.yml。 在这个文件中，添加以下内容： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 name: Deploy Hugo on: push: branches: - master # 确保分支与你使用的相匹配 jobs: build-deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v2 with: submodules: \u0026#39;recursive\u0026#39; # 指示同步子模块 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - name: Build run: hugo --minify - name: Deploy to GitHub Pages uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.DEPLOY_KEY }} publish_dir: ./public external_repository: username/username.github.io # 替换为你的静态文件仓库 keep_files: false # 每次部署时，GitHub Pages 仓库中旧的文件都会被清除，并替换为新生成的文件。这通常是部署静态网站时的期望行为。 在 Deploy to GitHub Pages 步骤中，选择了使用 deploy_key。接下来将在你的 GitHub 仓库中配置相应的部署密钥（DEPLOY_KEY）。这个密钥需要被添加到你的 源代码仓库的 Secrets 中，并且对应的公钥需要被添加到你的 user.github.io 静态文件仓库中。\n生成新的SSH 密钥 使用 ssh-keygen 命令生成新的密钥对。\n1 ssh-keygen -t rsa -b 4096 -C \u0026#34;your_email@example.com\u0026#34; 将 \u0026quot;your_email@example.com\u0026quot; 替换为你的电子邮件地址。当系统提示你输入文件名时，输入一个独特的名称，比如 hugo_deploy_key，以避免覆盖任何现有的密钥。根据提示选择保存密钥的位置和是否设置密码。由于这个密钥将由自动化系统使用，所以通常不设置密码。\n在 GitHub 中设置密钥 设置部署密钥（Deploy Key） 找到你刚生成的公钥文件：默认情况下，它将保存在 ~/.ssh/ 目录下，文件名类似于 hugo_deploy_key.pub。 打开公钥文件并复制内容。 在你的 GitHub Pages 仓库（username.github.io）中添加公钥作为部署密钥： 转到 GitHub 仓库，点击 \u0026ldquo;Settings\u0026rdquo;。 在侧边栏中选择 \u0026ldquo;Deploy keys\u0026rdquo;。 点击 \u0026ldquo;Add deploy key\u0026rdquo;，粘贴你的公钥内容。 给它一个识别的标题，比如 \u0026ldquo;Hugo Deploy Key\u0026rdquo;。 确保选中 \u0026ldquo;Allow write access\u0026rdquo;。 点击 \u0026ldquo;Add key\u0026rdquo;。 设置 Secret 找到你的私钥文件：这是在生成密钥对时没有 .pub 扩展名的文件，比如 hugo_deploy_key。 打开私钥文件并复制内容。 在你的 Hugo 源代码仓库中添加私钥作为 Secret： 转到 GitHub 仓库，点击 \u0026ldquo;Settings\u0026rdquo;。 在侧边栏中选择 \u0026ldquo;Secrets and variables\u0026rdquo;，点击\u0026quot;Actions\u0026quot;。 点击 \u0026ldquo;New repository secret\u0026rdquo;。 命名为 DEPLOY_KEY，粘贴你的私钥内容。 点击 \u0026ldquo;Add secret\u0026rdquo;。 开启Github Page Github Action配置完成后,我们需要开启GitHub page,进入你的GitHub Pages 仓库（username.github.io）,点击 \u0026ldquo;Settings\u0026rdquo;,找到pages项,完成相关设置。\n将 Hugo 博客根目录推送到源代码仓库，就可以在https://username.github.io中访问你的博客啦。\n1 2 3 git add . git commit -m \u0026#34;博客搭建完成\u0026#34; git push -u origin master 到这里我们就成功完成了整个Hugo博客的搭建，并实现了通过GitHub Actions自动构建发布博客。\n","date":"2023-12-01T22:32:25+08:00","permalink":"https://weightless-sea.github.io/p/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","title":"博客搭建"},{"content":"示例： mklink /D D:\\weightless-sea\\04-个人 C:\\Users\\why\\hujan-blog\\content\\post\nmklink /D D:\\weightless-sea\\04-个人 E:\\test\n","date":"2023-12-01T14:23:34+08:00","permalink":"https://weightless-sea.github.io/p/mklink/","title":"mklink"},{"content":"文本文本\n","date":"2023-11-30T00:00:00Z","permalink":"https://weightless-sea.github.io/p/%E6%B5%8B%E8%AF%95/","title":"测试"}]